name: Build and Release with SLSA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  id-token: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
      short-sha: ${{ steps.vars.outputs.short-sha }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Set variables
      id: vars
      run: |
        echo "short-sha=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT
        echo "commit-msg=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: '~> v2'
        args: release --clean --snapshot
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SHORT_SHA: ${{ steps.vars.outputs.short-sha }}
        COMMIT_MSG: ${{ steps.vars.outputs.commit-msg }}

    - name: Calculate SHA1 hashes
      id: hash
      run: |
        cd dist
        echo "# SHA1 校验值" > sha1.txt
        echo "" >> sha1.txt
        for file in edu-auth-*; do
          if [ -f "$file" ]; then
            sha1sum "$file" >> sha1.txt
          fi
        done
        # 输出二进制文件的hash用于SLSA
        sha1sum edu-auth-* | base64 -w0 > hashes.txt
        echo "hashes=$(cat hashes.txt)" >> $GITHUB_OUTPUT

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          dist/edu-auth-*
          dist/sha1.txt

  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: true

  release:
    needs: [build, provenance]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: binaries
        path: ./dist

    - name: Download provenance
      uses: actions/download-artifact@v4
      with:
        name: "${{ needs.provenance.outputs.provenance-name }}"
        path: ./dist

    - name: Set variables
      id: vars
      run: |
        echo "short-sha=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT
        echo "commit-msg<<EOF" >> $GITHUB_OUTPUT
        git log -1 --pretty=%B >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: "Edu-Auth-${{ steps.vars.outputs.short-sha }}"
        name: "Edu-Auth-${{ steps.vars.outputs.short-sha }}"
        body: |
          ## 构建信息
          
          **Commit:** ${{ github.sha }}
          **短哈希:** ${{ steps.vars.outputs.short-sha }}
          
          ## 更新日志
          
          ${{ steps.vars.outputs.commit-msg }}
          
          ## 文件说明
          
          - `edu-auth-*`: 各平台二进制可执行文件
          - `*.intoto.jsonl`: SLSA Provenance证明文件
          - `sha1.txt`: 文件SHA1校验值
        files: |
          dist/edu-auth-*
          dist/*.intoto.jsonl
          dist/sha1.txt
        draft: false
        prerelease: false
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}